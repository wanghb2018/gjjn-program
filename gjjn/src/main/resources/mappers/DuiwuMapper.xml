<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mochen.dao.DuiwuMapper">
  <resultMap id="BaseResultMap" type="com.mochen.model.Duiwu">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="totalzdl" jdbcType="INTEGER" property="totalzdl" />
    <result column="five_id" jdbcType="INTEGER" property="fiveId" />
    <result column="four_id" jdbcType="INTEGER" property="fourId" />
    <result column="one_id" jdbcType="INTEGER" property="oneId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="six_id" jdbcType="INTEGER" property="sixId" />
    <result column="three_id" jdbcType="INTEGER" property="threeId" />
    <result column="two_id" jdbcType="INTEGER" property="twoId" />
    <result column="count" jdbcType="INTEGER" property="count" />
  </resultMap>
  <sql id="Base_Column_List">
    id, totalzdl, five_id, four_id, one_id, role_id, six_id, three_id, two_id, count
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from work_duiwu
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getByRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from work_duiwu
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from work_duiwu
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mochen.model.Duiwu">
    insert into work_duiwu (id, totalzdl, five_id, 
      four_id, one_id, role_id, 
      six_id, three_id, two_id, 
      count)
    values (#{id,jdbcType=INTEGER}, #{totalzdl,jdbcType=INTEGER}, #{fiveId,jdbcType=INTEGER}, 
      #{fourId,jdbcType=INTEGER}, #{oneId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, 
      #{sixId,jdbcType=INTEGER}, #{threeId,jdbcType=INTEGER}, #{twoId,jdbcType=INTEGER}, 
      #{count,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.mochen.model.Duiwu">
    insert into work_duiwu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="totalzdl != null">
        totalzdl,
      </if>
      <if test="fiveId != null">
        five_id,
      </if>
      <if test="fourId != null">
        four_id,
      </if>
      <if test="oneId != null">
        one_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="sixId != null">
        six_id,
      </if>
      <if test="threeId != null">
        three_id,
      </if>
      <if test="twoId != null">
        two_id,
      </if>
      <if test="count != null">
        count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="totalzdl != null">
        #{totalzdl,jdbcType=INTEGER},
      </if>
      <if test="fiveId != null">
        #{fiveId,jdbcType=INTEGER},
      </if>
      <if test="fourId != null">
        #{fourId,jdbcType=INTEGER},
      </if>
      <if test="oneId != null">
        #{oneId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="sixId != null">
        #{sixId,jdbcType=INTEGER},
      </if>
      <if test="threeId != null">
        #{threeId,jdbcType=INTEGER},
      </if>
      <if test="twoId != null">
        #{twoId,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mochen.model.Duiwu">
    update work_duiwu
    <set>
      <if test="totalzdl != null">
        totalzdl = #{totalzdl,jdbcType=INTEGER},
      </if>
      <if test="fiveId != null">
        five_id = #{fiveId,jdbcType=INTEGER},
      </if>
      <if test="fourId != null">
        four_id = #{fourId,jdbcType=INTEGER},
      </if>
      <if test="oneId != null">
        one_id = #{oneId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="sixId != null">
        six_id = #{sixId,jdbcType=INTEGER},
      </if>
      <if test="threeId != null">
        three_id = #{threeId,jdbcType=INTEGER},
      </if>
      <if test="twoId != null">
        two_id = #{twoId,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mochen.model.Duiwu">
    update work_duiwu
    set totalzdl = #{totalzdl,jdbcType=INTEGER},
      five_id = #{fiveId,jdbcType=INTEGER},
      four_id = #{fourId,jdbcType=INTEGER},
      one_id = #{oneId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      six_id = #{sixId,jdbcType=INTEGER},
      three_id = #{threeId,jdbcType=INTEGER},
      two_id = #{twoId,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>